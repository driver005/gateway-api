/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Address } from './address';
import { IssuingCardShipping } from './issuingCardShipping';
import { IssuingCardShippingCustoms1 } from './issuingCardShippingCustoms1';

/**
* Where and how the card will be shipped.
*/
export class IssuingCardShipping1 {
    'address': Address;
    /**
    * The delivery company that shipped a card.
    */
    'carrier': IssuingCardShipping1.CarrierEnum;
    'customs': IssuingCardShippingCustoms1 | null;
    /**
    * A unix timestamp representing a best estimate of when the card will be delivered.
    */
    'eta': number | null;
    /**
    * Recipient name.
    */
    'name': string;
    /**
    * The phone number of the receiver of the bulk shipment. This phone number will be provided to the shipping company, who might use it to contact the receiver in case of delivery issues.
    */
    'phoneNumber': string | null;
    /**
    * Whether a signature is required for card delivery. This feature is only supported for US users. Standard shipping service does not support signature on delivery. The default value for standard shipping service is false and for express and priority services is true.
    */
    'requireSignature': boolean | null;
    /**
    * Shipment service, such as `standard` or `express`.
    */
    'service': IssuingCardShipping1.ServiceEnum;
    /**
    * The delivery status of the card.
    */
    'status': IssuingCardShipping1.StatusEnum;
    /**
    * A tracking number for a card shipment.
    */
    'trackingNumber': string | null;
    /**
    * A link to the shipping carrier\'s site where you can view detailed information about a card shipment.
    */
    'trackingUrl': string | null;
    /**
    * Packaging options.
    */
    'type': IssuingCardShipping1.TypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "address",
            "baseName": "address",
            "type": "Address"
        },
        {
            "name": "carrier",
            "baseName": "carrier",
            "type": "IssuingCardShipping1.CarrierEnum"
        },
        {
            "name": "customs",
            "baseName": "customs",
            "type": "IssuingCardShippingCustoms1"
        },
        {
            "name": "eta",
            "baseName": "eta",
            "type": "number"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "phoneNumber",
            "baseName": "phone_number",
            "type": "string"
        },
        {
            "name": "requireSignature",
            "baseName": "require_signature",
            "type": "boolean"
        },
        {
            "name": "service",
            "baseName": "service",
            "type": "IssuingCardShipping1.ServiceEnum"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "IssuingCardShipping1.StatusEnum"
        },
        {
            "name": "trackingNumber",
            "baseName": "tracking_number",
            "type": "string"
        },
        {
            "name": "trackingUrl",
            "baseName": "tracking_url",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "IssuingCardShipping1.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return IssuingCardShipping1.attributeTypeMap;
    }
}

export namespace IssuingCardShipping1 {
    export enum CarrierEnum {
        Dhl = <any> 'dhl',
        Fedex = <any> 'fedex',
        RoyalMail = <any> 'royal_mail',
        Usps = <any> 'usps'
    }
    export enum ServiceEnum {
        Express = <any> 'express',
        Priority = <any> 'priority',
        Standard = <any> 'standard'
    }
    export enum StatusEnum {
        Canceled = <any> 'canceled',
        Delivered = <any> 'delivered',
        Failure = <any> 'failure',
        Pending = <any> 'pending',
        Returned = <any> 'returned',
        Shipped = <any> 'shipped'
    }
    export enum TypeEnum {
        Bulk = <any> 'bulk',
        Individual = <any> 'individual'
    }
}
