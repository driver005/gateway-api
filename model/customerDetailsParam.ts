/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { DataParams } from './dataParams';
import { PostCustomersRequestAddress } from './postCustomersRequestAddress';
import { PostCustomersRequestShipping } from './postCustomersRequestShipping';
import { TaxParam } from './taxParam';

export class CustomerDetailsParam {
    'address'?: PostCustomersRequestAddress;
    'shipping'?: PostCustomersRequestShipping;
    'tax'?: TaxParam;
    /**
    * The customer\'s tax exemption. One of `none`, `exempt`, or `reverse`.
    */
    'taxExempt'?: CustomerDetailsParam.TaxExemptEnum;
    /**
    * The customer\'s tax IDs.
    */
    'taxIds'?: Array<DataParams>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "address",
            "baseName": "address",
            "type": "PostCustomersRequestAddress"
        },
        {
            "name": "shipping",
            "baseName": "shipping",
            "type": "PostCustomersRequestShipping"
        },
        {
            "name": "tax",
            "baseName": "tax",
            "type": "TaxParam"
        },
        {
            "name": "taxExempt",
            "baseName": "tax_exempt",
            "type": "CustomerDetailsParam.TaxExemptEnum"
        },
        {
            "name": "taxIds",
            "baseName": "tax_ids",
            "type": "Array<DataParams>"
        }    ];

    static getAttributeTypeMap() {
        return CustomerDetailsParam.attributeTypeMap;
    }
}

export namespace CustomerDetailsParam {
    export enum TaxExemptEnum {
        Empty = <any> '',
        Exempt = <any> 'exempt',
        None = <any> 'none',
        Reverse = <any> 'reverse'
    }
}
