/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Source } from './source';
import { SourceMandateNotificationAcssDebitData } from './sourceMandateNotificationAcssDebitData';
import { SourceMandateNotificationBacsDebitData } from './sourceMandateNotificationBacsDebitData';
import { SourceMandateNotificationSepaDebitData } from './sourceMandateNotificationSepaDebitData';

/**
* Source mandate notifications should be created when a notification related to a source mandate must be sent to the payer. They will trigger a webhook or deliver an email to the customer.
*/
export class SourceMandateNotification {
    'acssDebit'?: SourceMandateNotificationAcssDebitData;
    /**
    * A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the amount associated with the mandate notification. The amount is expressed in the currency of the underlying source. Required if the notification type is `debit_initiated`.
    */
    'amount': number | null;
    'bacsDebit'?: SourceMandateNotificationBacsDebitData;
    /**
    * Time at which the object was created. Measured in seconds since the Unix epoch.
    */
    'created': number;
    /**
    * Unique identifier for the object.
    */
    'id': string;
    /**
    * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    */
    'livemode': boolean;
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': SourceMandateNotification.ObjectEnum;
    /**
    * The reason of the mandate notification. Valid reasons are `mandate_confirmed` or `debit_initiated`.
    */
    'reason': string;
    'sepaDebit'?: SourceMandateNotificationSepaDebitData;
    'source': Source;
    /**
    * The status of the mandate notification. Valid statuses are `pending` or `submitted`.
    */
    'status': string;
    /**
    * The type of source this mandate notification is attached to. Should be the source type identifier code for the payment method, such as `three_d_secure`.
    */
    'type': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "acssDebit",
            "baseName": "acss_debit",
            "type": "SourceMandateNotificationAcssDebitData"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "bacsDebit",
            "baseName": "bacs_debit",
            "type": "SourceMandateNotificationBacsDebitData"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "SourceMandateNotification.ObjectEnum"
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string"
        },
        {
            "name": "sepaDebit",
            "baseName": "sepa_debit",
            "type": "SourceMandateNotificationSepaDebitData"
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "Source"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return SourceMandateNotification.attributeTypeMap;
    }
}

export namespace SourceMandateNotification {
    export enum ObjectEnum {
        SourceMandateNotification = <any> 'source_mandate_notification'
    }
}
