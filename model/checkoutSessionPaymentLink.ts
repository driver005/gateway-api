/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PaymentLink } from './paymentLink';
import { PaymentLinkConsentCollection } from './paymentLinkConsentCollection';
import { PaymentLinkInvoiceCreation } from './paymentLinkInvoiceCreation';
import { PaymentLinkOnBehalfOf } from './paymentLinkOnBehalfOf';
import { PaymentLinkPaymentIntentData } from './paymentLinkPaymentIntentData';
import { PaymentLinkShippingAddressCollection } from './paymentLinkShippingAddressCollection';
import { PaymentLinkSubscriptionData } from './paymentLinkSubscriptionData';
import { PaymentLinkTransferData } from './paymentLinkTransferData';
import { PaymentLinksResourceAfterCompletion } from './paymentLinksResourceAfterCompletion';
import { PaymentLinksResourceAutomaticTax } from './paymentLinksResourceAutomaticTax';
import { PaymentLinksResourceCustomFields } from './paymentLinksResourceCustomFields';
import { PaymentLinksResourceCustomText } from './paymentLinksResourceCustomText';
import { PaymentLinksResourceListLineItems1 } from './paymentLinksResourceListLineItems1';
import { PaymentLinksResourcePhoneNumberCollection } from './paymentLinksResourcePhoneNumberCollection';
import { PaymentLinksResourceShippingOption } from './paymentLinksResourceShippingOption';
import { PaymentLinksResourceTaxIdCollection } from './paymentLinksResourceTaxIdCollection';

/**
* The ID of the Payment Link that created this Session.
*/
export class CheckoutSessionPaymentLink {
    /**
    * Whether the payment link\'s `url` is active. If `false`, customers visiting the URL will be shown a page saying that the link has been deactivated.
    */
    'active': boolean;
    'afterCompletion': PaymentLinksResourceAfterCompletion;
    /**
    * Whether user redeemable promotion codes are enabled.
    */
    'allowPromotionCodes': boolean;
    /**
    * The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner\'s Stripe account.
    */
    'applicationFeeAmount': number | null;
    /**
    * This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner\'s Stripe account.
    */
    'applicationFeePercent': number | null;
    'automaticTax': PaymentLinksResourceAutomaticTax;
    /**
    * Configuration for collecting the customer\'s billing address.
    */
    'billingAddressCollection': CheckoutSessionPaymentLink.BillingAddressCollectionEnum;
    'consentCollection': PaymentLinkConsentCollection | null;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    */
    'currency': string;
    /**
    * Collect additional information from your customer using custom fields. Up to 2 fields are supported.
    */
    'customFields': Array<PaymentLinksResourceCustomFields>;
    'customText': PaymentLinksResourceCustomText;
    /**
    * Configuration for Customer creation during checkout.
    */
    'customerCreation': CheckoutSessionPaymentLink.CustomerCreationEnum;
    /**
    * Unique identifier for the object.
    */
    'id': string;
    'invoiceCreation': PaymentLinkInvoiceCreation | null;
    'lineItems'?: PaymentLinksResourceListLineItems1;
    /**
    * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    */
    'livemode': boolean;
    /**
    * Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    */
    'metadata': { [key: string]: string; };
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': CheckoutSessionPaymentLink.ObjectEnum;
    'onBehalfOf': PaymentLinkOnBehalfOf | null;
    'paymentIntentData': PaymentLinkPaymentIntentData | null;
    /**
    * Configuration for collecting a payment method during checkout.
    */
    'paymentMethodCollection': CheckoutSessionPaymentLink.PaymentMethodCollectionEnum;
    /**
    * The list of payment method types that customers can use. When `null`, Stripe will dynamically show relevant payment methods you\'ve enabled in your [payment method settings](https://dashboard.stripe.com/settings/payment_methods).
    */
    'paymentMethodTypes': Array<CheckoutSessionPaymentLink.PaymentMethodTypesEnum>;
    'phoneNumberCollection': PaymentLinksResourcePhoneNumberCollection;
    'shippingAddressCollection': PaymentLinkShippingAddressCollection | null;
    /**
    * The shipping rate options applied to the session.
    */
    'shippingOptions': Array<PaymentLinksResourceShippingOption>;
    /**
    * Indicates the type of transaction being performed which customizes relevant text on the page, such as the submit button.
    */
    'submitType': CheckoutSessionPaymentLink.SubmitTypeEnum;
    'subscriptionData': PaymentLinkSubscriptionData | null;
    'taxIdCollection': PaymentLinksResourceTaxIdCollection;
    'transferData': PaymentLinkTransferData | null;
    /**
    * The public URL that can be shared with customers.
    */
    'url': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean"
        },
        {
            "name": "afterCompletion",
            "baseName": "after_completion",
            "type": "PaymentLinksResourceAfterCompletion"
        },
        {
            "name": "allowPromotionCodes",
            "baseName": "allow_promotion_codes",
            "type": "boolean"
        },
        {
            "name": "applicationFeeAmount",
            "baseName": "application_fee_amount",
            "type": "number"
        },
        {
            "name": "applicationFeePercent",
            "baseName": "application_fee_percent",
            "type": "number"
        },
        {
            "name": "automaticTax",
            "baseName": "automatic_tax",
            "type": "PaymentLinksResourceAutomaticTax"
        },
        {
            "name": "billingAddressCollection",
            "baseName": "billing_address_collection",
            "type": "CheckoutSessionPaymentLink.BillingAddressCollectionEnum"
        },
        {
            "name": "consentCollection",
            "baseName": "consent_collection",
            "type": "PaymentLinkConsentCollection"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "customFields",
            "baseName": "custom_fields",
            "type": "Array<PaymentLinksResourceCustomFields>"
        },
        {
            "name": "customText",
            "baseName": "custom_text",
            "type": "PaymentLinksResourceCustomText"
        },
        {
            "name": "customerCreation",
            "baseName": "customer_creation",
            "type": "CheckoutSessionPaymentLink.CustomerCreationEnum"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "invoiceCreation",
            "baseName": "invoice_creation",
            "type": "PaymentLinkInvoiceCreation"
        },
        {
            "name": "lineItems",
            "baseName": "line_items",
            "type": "PaymentLinksResourceListLineItems1"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "CheckoutSessionPaymentLink.ObjectEnum"
        },
        {
            "name": "onBehalfOf",
            "baseName": "on_behalf_of",
            "type": "PaymentLinkOnBehalfOf"
        },
        {
            "name": "paymentIntentData",
            "baseName": "payment_intent_data",
            "type": "PaymentLinkPaymentIntentData"
        },
        {
            "name": "paymentMethodCollection",
            "baseName": "payment_method_collection",
            "type": "CheckoutSessionPaymentLink.PaymentMethodCollectionEnum"
        },
        {
            "name": "paymentMethodTypes",
            "baseName": "payment_method_types",
            "type": "Array<CheckoutSessionPaymentLink.PaymentMethodTypesEnum>"
        },
        {
            "name": "phoneNumberCollection",
            "baseName": "phone_number_collection",
            "type": "PaymentLinksResourcePhoneNumberCollection"
        },
        {
            "name": "shippingAddressCollection",
            "baseName": "shipping_address_collection",
            "type": "PaymentLinkShippingAddressCollection"
        },
        {
            "name": "shippingOptions",
            "baseName": "shipping_options",
            "type": "Array<PaymentLinksResourceShippingOption>"
        },
        {
            "name": "submitType",
            "baseName": "submit_type",
            "type": "CheckoutSessionPaymentLink.SubmitTypeEnum"
        },
        {
            "name": "subscriptionData",
            "baseName": "subscription_data",
            "type": "PaymentLinkSubscriptionData"
        },
        {
            "name": "taxIdCollection",
            "baseName": "tax_id_collection",
            "type": "PaymentLinksResourceTaxIdCollection"
        },
        {
            "name": "transferData",
            "baseName": "transfer_data",
            "type": "PaymentLinkTransferData"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return CheckoutSessionPaymentLink.attributeTypeMap;
    }
}

export namespace CheckoutSessionPaymentLink {
    export enum BillingAddressCollectionEnum {
        Auto = <any> 'auto',
        Required = <any> 'required'
    }
    export enum CustomerCreationEnum {
        Always = <any> 'always',
        IfRequired = <any> 'if_required'
    }
    export enum ObjectEnum {
        PaymentLink = <any> 'payment_link'
    }
    export enum PaymentMethodCollectionEnum {
        Always = <any> 'always',
        IfRequired = <any> 'if_required'
    }
    export enum PaymentMethodTypesEnum {
        Affirm = <any> 'affirm',
        AfterpayClearpay = <any> 'afterpay_clearpay',
        Alipay = <any> 'alipay',
        AuBecsDebit = <any> 'au_becs_debit',
        BacsDebit = <any> 'bacs_debit',
        Bancontact = <any> 'bancontact',
        Blik = <any> 'blik',
        Boleto = <any> 'boleto',
        Card = <any> 'card',
        Eps = <any> 'eps',
        Fpx = <any> 'fpx',
        Giropay = <any> 'giropay',
        Grabpay = <any> 'grabpay',
        Ideal = <any> 'ideal',
        Klarna = <any> 'klarna',
        Konbini = <any> 'konbini',
        Oxxo = <any> 'oxxo',
        P24 = <any> 'p24',
        Paynow = <any> 'paynow',
        Pix = <any> 'pix',
        Promptpay = <any> 'promptpay',
        SepaDebit = <any> 'sepa_debit',
        Sofort = <any> 'sofort',
        UsBankAccount = <any> 'us_bank_account',
        WechatPay = <any> 'wechat_pay'
    }
    export enum SubmitTypeEnum {
        Auto = <any> 'auto',
        Book = <any> 'book',
        Donate = <any> 'donate',
        Pay = <any> 'pay'
    }
}
