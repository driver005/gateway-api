/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ItemPrice } from './itemPrice';
import { LineItemsDiscountAmount } from './lineItemsDiscountAmount';
import { LineItemsTaxAmount } from './lineItemsTaxAmount';

/**
* A line item.
*/
export class Item {
    /**
    * Total discount amount applied. If no discounts were applied, defaults to 0.
    */
    'amountDiscount': number;
    /**
    * Total before any discounts or taxes are applied.
    */
    'amountSubtotal': number;
    /**
    * Total tax amount applied. If no tax was applied, defaults to 0.
    */
    'amountTax': number;
    /**
    * Total after discounts and taxes.
    */
    'amountTotal': number;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    */
    'currency': string;
    /**
    * An arbitrary string attached to the object. Often useful for displaying to users. Defaults to product name.
    */
    'description': string;
    /**
    * The discounts applied to the line item.
    */
    'discounts'?: Array<LineItemsDiscountAmount>;
    /**
    * Unique identifier for the object.
    */
    'id': string;
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': Item.ObjectEnum;
    'price': ItemPrice | null;
    /**
    * The quantity of products being purchased.
    */
    'quantity': number | null;
    /**
    * The taxes applied to the line item.
    */
    'taxes'?: Array<LineItemsTaxAmount>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "amountDiscount",
            "baseName": "amount_discount",
            "type": "number"
        },
        {
            "name": "amountSubtotal",
            "baseName": "amount_subtotal",
            "type": "number"
        },
        {
            "name": "amountTax",
            "baseName": "amount_tax",
            "type": "number"
        },
        {
            "name": "amountTotal",
            "baseName": "amount_total",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "discounts",
            "baseName": "discounts",
            "type": "Array<LineItemsDiscountAmount>"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "Item.ObjectEnum"
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "ItemPrice"
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number"
        },
        {
            "name": "taxes",
            "baseName": "taxes",
            "type": "Array<LineItemsTaxAmount>"
        }    ];

    static getAttributeTypeMap() {
        return Item.attributeTypeMap;
    }
}

export namespace Item {
    export enum ObjectEnum {
        Item = <any> 'item'
    }
}
