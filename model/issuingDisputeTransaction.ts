/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IssuingAuthorizationMerchantData } from './issuingAuthorizationMerchantData';
import { IssuingTransaction } from './issuingTransaction';
import { IssuingTransactionAmountDetails1 } from './issuingTransactionAmountDetails1';
import { IssuingTransactionAuthorization } from './issuingTransactionAuthorization';
import { IssuingTransactionBalanceTransaction } from './issuingTransactionBalanceTransaction';
import { IssuingTransactionCard } from './issuingTransactionCard';
import { IssuingTransactionCardholder } from './issuingTransactionCardholder';
import { IssuingTransactionDispute } from './issuingTransactionDispute';
import { IssuingTransactionPurchaseDetails1 } from './issuingTransactionPurchaseDetails1';
import { IssuingTransactionTreasury1 } from './issuingTransactionTreasury1';

/**
* The transaction being disputed.
*/
export class IssuingDisputeTransaction {
    /**
    * The transaction amount, which will be reflected in your balance. This amount is in your currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    */
    'amount': number;
    'amountDetails': IssuingTransactionAmountDetails1 | null;
    'authorization': IssuingTransactionAuthorization | null;
    'balanceTransaction': IssuingTransactionBalanceTransaction | null;
    'card': IssuingTransactionCard;
    'cardholder': IssuingTransactionCardholder | null;
    /**
    * Time at which the object was created. Measured in seconds since the Unix epoch.
    */
    'created': number;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    */
    'currency': string;
    'dispute': IssuingTransactionDispute | null;
    /**
    * Unique identifier for the object.
    */
    'id': string;
    /**
    * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    */
    'livemode': boolean;
    /**
    * The amount that the merchant will receive, denominated in `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). It will be different from `amount` if the merchant is taking payment in a different currency.
    */
    'merchantAmount': number;
    /**
    * The currency with which the merchant is taking payment.
    */
    'merchantCurrency': string;
    'merchantData': IssuingAuthorizationMerchantData;
    /**
    * Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    */
    'metadata': { [key: string]: string; };
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': IssuingDisputeTransaction.ObjectEnum;
    'purchaseDetails': IssuingTransactionPurchaseDetails1 | null;
    'treasury'?: IssuingTransactionTreasury1 | null;
    /**
    * The nature of the transaction.
    */
    'type': IssuingDisputeTransaction.TypeEnum;
    /**
    * The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`.
    */
    'wallet': IssuingDisputeTransaction.WalletEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "amountDetails",
            "baseName": "amount_details",
            "type": "IssuingTransactionAmountDetails1"
        },
        {
            "name": "authorization",
            "baseName": "authorization",
            "type": "IssuingTransactionAuthorization"
        },
        {
            "name": "balanceTransaction",
            "baseName": "balance_transaction",
            "type": "IssuingTransactionBalanceTransaction"
        },
        {
            "name": "card",
            "baseName": "card",
            "type": "IssuingTransactionCard"
        },
        {
            "name": "cardholder",
            "baseName": "cardholder",
            "type": "IssuingTransactionCardholder"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "dispute",
            "baseName": "dispute",
            "type": "IssuingTransactionDispute"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "merchantAmount",
            "baseName": "merchant_amount",
            "type": "number"
        },
        {
            "name": "merchantCurrency",
            "baseName": "merchant_currency",
            "type": "string"
        },
        {
            "name": "merchantData",
            "baseName": "merchant_data",
            "type": "IssuingAuthorizationMerchantData"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "IssuingDisputeTransaction.ObjectEnum"
        },
        {
            "name": "purchaseDetails",
            "baseName": "purchase_details",
            "type": "IssuingTransactionPurchaseDetails1"
        },
        {
            "name": "treasury",
            "baseName": "treasury",
            "type": "IssuingTransactionTreasury1"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "IssuingDisputeTransaction.TypeEnum"
        },
        {
            "name": "wallet",
            "baseName": "wallet",
            "type": "IssuingDisputeTransaction.WalletEnum"
        }    ];

    static getAttributeTypeMap() {
        return IssuingDisputeTransaction.attributeTypeMap;
    }
}

export namespace IssuingDisputeTransaction {
    export enum ObjectEnum {
        IssuingTransaction = <any> 'issuing.transaction'
    }
    export enum TypeEnum {
        Capture = <any> 'capture',
        Refund = <any> 'refund'
    }
    export enum WalletEnum {
        ApplePay = <any> 'apple_pay',
        GooglePay = <any> 'google_pay',
        SamsungPay = <any> 'samsung_pay'
    }
}
