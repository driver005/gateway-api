/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CreditNote } from './creditNote';
import { CreditNoteCustomer } from './creditNoteCustomer';
import { CreditNoteCustomerBalanceTransaction } from './creditNoteCustomerBalanceTransaction';
import { CreditNoteInvoice } from './creditNoteInvoice';
import { CreditNoteLinesList1 } from './creditNoteLinesList1';
import { CreditNoteRefund } from './creditNoteRefund';
import { CreditNoteShippingCost2 } from './creditNoteShippingCost2';
import { CreditNoteTaxAmount } from './creditNoteTaxAmount';
import { DiscountsResourceDiscountAmount } from './discountsResourceDiscountAmount';

/**
* The ID of the credit note (if any) related to the transaction.
*/
export class CustomerBalanceTransactionCreditNote {
    /**
    * The integer amount in %s representing the total amount of the credit note, including tax.
    */
    'amount': number;
    /**
    * This is the sum of all the shipping amounts.
    */
    'amountShipping': number;
    /**
    * Time at which the object was created. Measured in seconds since the Unix epoch.
    */
    'created': number;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    */
    'currency': string;
    'customer': CreditNoteCustomer;
    'customerBalanceTransaction': CreditNoteCustomerBalanceTransaction | null;
    /**
    * The integer amount in %s representing the total amount of discount that was credited.
    */
    'discountAmount': number;
    /**
    * The aggregate amounts calculated per discount for all line items.
    */
    'discountAmounts': Array<DiscountsResourceDiscountAmount>;
    /**
    * Unique identifier for the object.
    */
    'id': string;
    'invoice': CreditNoteInvoice;
    'lines': CreditNoteLinesList1;
    /**
    * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    */
    'livemode': boolean;
    /**
    * Customer-facing text that appears on the credit note PDF.
    */
    'memo': string | null;
    /**
    * Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    */
    'metadata': { [key: string]: string; } | null;
    /**
    * A unique number that identifies this particular credit note and appears on the PDF of the credit note and its associated invoice.
    */
    'number': string;
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': CustomerBalanceTransactionCreditNote.ObjectEnum;
    /**
    * Amount that was credited outside of Stripe.
    */
    'outOfBandAmount': number | null;
    /**
    * The link to download the PDF of the credit note.
    */
    'pdf': string;
    /**
    * Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    */
    'reason': CustomerBalanceTransactionCreditNote.ReasonEnum;
    'refund': CreditNoteRefund | null;
    'shippingCost': CreditNoteShippingCost2 | null;
    /**
    * Status of this credit note, one of `issued` or `void`. Learn more about [voiding credit notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).
    */
    'status': CustomerBalanceTransactionCreditNote.StatusEnum;
    /**
    * The integer amount in %s representing the amount of the credit note, excluding exclusive tax and invoice level discounts.
    */
    'subtotal': number;
    /**
    * The integer amount in %s representing the amount of the credit note, excluding all tax and invoice level discounts.
    */
    'subtotalExcludingTax': number | null;
    /**
    * The aggregate amounts calculated per tax rate for all line items.
    */
    'taxAmounts': Array<CreditNoteTaxAmount>;
    /**
    * The integer amount in %s representing the total amount of the credit note, including tax and all discount.
    */
    'total': number;
    /**
    * The integer amount in %s representing the total amount of the credit note, excluding tax, but including discounts.
    */
    'totalExcludingTax': number | null;
    /**
    * Type of this credit note, one of `pre_payment` or `post_payment`. A `pre_payment` credit note means it was issued when the invoice was open. A `post_payment` credit note means it was issued when the invoice was paid.
    */
    'type': CustomerBalanceTransactionCreditNote.TypeEnum;
    /**
    * The time that the credit note was voided.
    */
    'voidedAt': number | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "amountShipping",
            "baseName": "amount_shipping",
            "type": "number"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "customer",
            "baseName": "customer",
            "type": "CreditNoteCustomer"
        },
        {
            "name": "customerBalanceTransaction",
            "baseName": "customer_balance_transaction",
            "type": "CreditNoteCustomerBalanceTransaction"
        },
        {
            "name": "discountAmount",
            "baseName": "discount_amount",
            "type": "number"
        },
        {
            "name": "discountAmounts",
            "baseName": "discount_amounts",
            "type": "Array<DiscountsResourceDiscountAmount>"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "invoice",
            "baseName": "invoice",
            "type": "CreditNoteInvoice"
        },
        {
            "name": "lines",
            "baseName": "lines",
            "type": "CreditNoteLinesList1"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "memo",
            "baseName": "memo",
            "type": "string"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "number",
            "baseName": "number",
            "type": "string"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "CustomerBalanceTransactionCreditNote.ObjectEnum"
        },
        {
            "name": "outOfBandAmount",
            "baseName": "out_of_band_amount",
            "type": "number"
        },
        {
            "name": "pdf",
            "baseName": "pdf",
            "type": "string"
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "CustomerBalanceTransactionCreditNote.ReasonEnum"
        },
        {
            "name": "refund",
            "baseName": "refund",
            "type": "CreditNoteRefund"
        },
        {
            "name": "shippingCost",
            "baseName": "shipping_cost",
            "type": "CreditNoteShippingCost2"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "CustomerBalanceTransactionCreditNote.StatusEnum"
        },
        {
            "name": "subtotal",
            "baseName": "subtotal",
            "type": "number"
        },
        {
            "name": "subtotalExcludingTax",
            "baseName": "subtotal_excluding_tax",
            "type": "number"
        },
        {
            "name": "taxAmounts",
            "baseName": "tax_amounts",
            "type": "Array<CreditNoteTaxAmount>"
        },
        {
            "name": "total",
            "baseName": "total",
            "type": "number"
        },
        {
            "name": "totalExcludingTax",
            "baseName": "total_excluding_tax",
            "type": "number"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "CustomerBalanceTransactionCreditNote.TypeEnum"
        },
        {
            "name": "voidedAt",
            "baseName": "voided_at",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return CustomerBalanceTransactionCreditNote.attributeTypeMap;
    }
}

export namespace CustomerBalanceTransactionCreditNote {
    export enum ObjectEnum {
        CreditNote = <any> 'credit_note'
    }
    export enum ReasonEnum {
        Duplicate = <any> 'duplicate',
        Fraudulent = <any> 'fraudulent',
        OrderChange = <any> 'order_change',
        ProductUnsatisfactory = <any> 'product_unsatisfactory'
    }
    export enum StatusEnum {
        Issued = <any> 'issued',
        Void = <any> 'void'
    }
    export enum TypeEnum {
        PostPayment = <any> 'post_payment',
        PrePayment = <any> 'pre_payment'
    }
}
