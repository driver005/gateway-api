/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* The Report Type resource corresponds to a particular type of report, such as the \"Activity summary\" or \"Itemized payouts\" reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://stripe.com/docs/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.  Note that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://stripe.com/docs/keys#test-live-modes).
*/
export class ReportingReportType {
    /**
    * Most recent time for which this Report Type is available. Measured in seconds since the Unix epoch.
    */
    'dataAvailableEnd': number;
    /**
    * Earliest time for which this Report Type is available. Measured in seconds since the Unix epoch.
    */
    'dataAvailableStart': number;
    /**
    * List of column names that are included by default when this Report Type gets run. (If the Report Type doesn\'t support the `columns` parameter, this will be null.)
    */
    'defaultColumns': Array<string> | null;
    /**
    * The [ID of the Report Type](https://stripe.com/docs/reporting/statements/api#available-report-types), such as `balance.summary.1`.
    */
    'id': string;
    /**
    * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    */
    'livemode': boolean;
    /**
    * Human-readable name of the Report Type
    */
    'name': string;
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': ReportingReportType.ObjectEnum;
    /**
    * When this Report Type was latest updated. Measured in seconds since the Unix epoch.
    */
    'updated': number;
    /**
    * Version of the Report Type. Different versions report with the same ID will have the same purpose, but may take different run parameters or have different result schemas.
    */
    'version': number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "dataAvailableEnd",
            "baseName": "data_available_end",
            "type": "number"
        },
        {
            "name": "dataAvailableStart",
            "baseName": "data_available_start",
            "type": "number"
        },
        {
            "name": "defaultColumns",
            "baseName": "default_columns",
            "type": "Array<string>"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "ReportingReportType.ObjectEnum"
        },
        {
            "name": "updated",
            "baseName": "updated",
            "type": "number"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ReportingReportType.attributeTypeMap;
    }
}

export namespace ReportingReportType {
    export enum ObjectEnum {
        ReportingReportType = <any> 'reporting.report_type'
    }
}
