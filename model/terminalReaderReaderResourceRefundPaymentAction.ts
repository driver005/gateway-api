/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { TerminalReaderReaderResourceRefundPaymentActionCharge } from './terminalReaderReaderResourceRefundPaymentActionCharge';
import { TerminalReaderReaderResourceRefundPaymentActionPaymentIntent } from './terminalReaderReaderResourceRefundPaymentActionPaymentIntent';
import { TerminalReaderReaderResourceRefundPaymentActionRefund } from './terminalReaderReaderResourceRefundPaymentActionRefund';

/**
* Represents a reader action to refund a payment
*/
export class TerminalReaderReaderResourceRefundPaymentAction {
    /**
    * The amount being refunded.
    */
    'amount'?: number;
    'charge'?: TerminalReaderReaderResourceRefundPaymentActionCharge;
    /**
    * Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    */
    'metadata'?: { [key: string]: string; };
    'paymentIntent'?: TerminalReaderReaderResourceRefundPaymentActionPaymentIntent;
    /**
    * The reason for the refund.
    */
    'reason'?: TerminalReaderReaderResourceRefundPaymentAction.ReasonEnum;
    'refund'?: TerminalReaderReaderResourceRefundPaymentActionRefund;
    /**
    * Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.
    */
    'refundApplicationFee'?: boolean;
    /**
    * Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.
    */
    'reverseTransfer'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "charge",
            "baseName": "charge",
            "type": "TerminalReaderReaderResourceRefundPaymentActionCharge"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "paymentIntent",
            "baseName": "payment_intent",
            "type": "TerminalReaderReaderResourceRefundPaymentActionPaymentIntent"
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "TerminalReaderReaderResourceRefundPaymentAction.ReasonEnum"
        },
        {
            "name": "refund",
            "baseName": "refund",
            "type": "TerminalReaderReaderResourceRefundPaymentActionRefund"
        },
        {
            "name": "refundApplicationFee",
            "baseName": "refund_application_fee",
            "type": "boolean"
        },
        {
            "name": "reverseTransfer",
            "baseName": "reverse_transfer",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return TerminalReaderReaderResourceRefundPaymentAction.attributeTypeMap;
    }
}

export namespace TerminalReaderReaderResourceRefundPaymentAction {
    export enum ReasonEnum {
        Duplicate = <any> 'duplicate',
        Fraudulent = <any> 'fraudulent',
        RequestedByCustomer = <any> 'requested_by_customer'
    }
}
