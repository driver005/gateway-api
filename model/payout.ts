/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PayoutBalanceTransaction } from './payoutBalanceTransaction';
import { PayoutDestination } from './payoutDestination';
import { PayoutFailureBalanceTransaction } from './payoutFailureBalanceTransaction';
import { PayoutOriginalPayout } from './payoutOriginalPayout';
import { PayoutReversedBy } from './payoutReversedBy';

/**
* A `Payout` object is created when you receive funds from Stripe, or when you initiate a payout to either a bank account or debit card of a [connected Stripe account](/docs/connect/bank-debit-card-payouts). You can retrieve individual payouts, as well as list all payouts. Payouts are made on [varying schedules](/docs/connect/manage-payout-schedule), depending on your country and industry.  Related guide: [Receiving Payouts](https://stripe.com/docs/payouts).
*/
export class Payout {
    /**
    * Amount (in %s) to be transferred to your bank account or debit card.
    */
    'amount': number;
    /**
    * Date the payout is expected to arrive in the bank. This factors in delays like weekends or bank holidays.
    */
    'arrivalDate': number;
    /**
    * Returns `true` if the payout was created by an [automated payout schedule](https://stripe.com/docs/payouts#payout-schedule), and `false` if it was [requested manually](https://stripe.com/docs/payouts#manual-payouts).
    */
    'automatic': boolean;
    'balanceTransaction': PayoutBalanceTransaction | null;
    /**
    * Time at which the object was created. Measured in seconds since the Unix epoch.
    */
    'created': number;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    */
    'currency': string;
    /**
    * An arbitrary string attached to the object. Often useful for displaying to users.
    */
    'description': string | null;
    'destination': PayoutDestination | null;
    'failureBalanceTransaction': PayoutFailureBalanceTransaction | null;
    /**
    * Error code explaining reason for payout failure if available. See [Types of payout failures](https://stripe.com/docs/api#payout_failures) for a list of failure codes.
    */
    'failureCode': string | null;
    /**
    * Message to user further explaining reason for payout failure if available.
    */
    'failureMessage': string | null;
    /**
    * Unique identifier for the object.
    */
    'id': string;
    /**
    * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    */
    'livemode': boolean;
    /**
    * Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    */
    'metadata': { [key: string]: string; } | null;
    /**
    * The method used to send this payout, which can be `standard` or `instant`. `instant` is only supported for payouts to debit cards. (See [Instant payouts for marketplaces](https://stripe.com/blog/instant-payouts-for-marketplaces) for more information.)
    */
    'method': string;
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': Payout.ObjectEnum;
    'originalPayout': PayoutOriginalPayout | null;
    'reversedBy': PayoutReversedBy | null;
    /**
    * The source balance this payout came from. One of `card`, `fpx`, or `bank_account`.
    */
    'sourceType': string;
    /**
    * Extra information about a payout to be displayed on the user\'s bank statement.
    */
    'statementDescriptor': string | null;
    /**
    * Current status of the payout: `paid`, `pending`, `in_transit`, `canceled` or `failed`. A payout is `pending` until it is submitted to the bank, when it becomes `in_transit`. The status then changes to `paid` if the transaction goes through, or to `failed` or `canceled` (within 5 business days). Some failed payouts may initially show as `paid` but then change to `failed`.
    */
    'status': string;
    /**
    * Can be `bank_account` or `card`.
    */
    'type': Payout.TypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "arrivalDate",
            "baseName": "arrival_date",
            "type": "number"
        },
        {
            "name": "automatic",
            "baseName": "automatic",
            "type": "boolean"
        },
        {
            "name": "balanceTransaction",
            "baseName": "balance_transaction",
            "type": "PayoutBalanceTransaction"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "destination",
            "baseName": "destination",
            "type": "PayoutDestination"
        },
        {
            "name": "failureBalanceTransaction",
            "baseName": "failure_balance_transaction",
            "type": "PayoutFailureBalanceTransaction"
        },
        {
            "name": "failureCode",
            "baseName": "failure_code",
            "type": "string"
        },
        {
            "name": "failureMessage",
            "baseName": "failure_message",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "method",
            "baseName": "method",
            "type": "string"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "Payout.ObjectEnum"
        },
        {
            "name": "originalPayout",
            "baseName": "original_payout",
            "type": "PayoutOriginalPayout"
        },
        {
            "name": "reversedBy",
            "baseName": "reversed_by",
            "type": "PayoutReversedBy"
        },
        {
            "name": "sourceType",
            "baseName": "source_type",
            "type": "string"
        },
        {
            "name": "statementDescriptor",
            "baseName": "statement_descriptor",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Payout.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return Payout.attributeTypeMap;
    }
}

export namespace Payout {
    export enum ObjectEnum {
        Payout = <any> 'payout'
    }
    export enum TypeEnum {
        BankAccount = <any> 'bank_account',
        Card = <any> 'card'
    }
}
