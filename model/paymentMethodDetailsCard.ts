/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PaymentMethodDetailsCardChecks1 } from './paymentMethodDetailsCardChecks1';
import { PaymentMethodDetailsCardInstallments1 } from './paymentMethodDetailsCardInstallments1';
import { PaymentMethodDetailsCardThreeDSecure } from './paymentMethodDetailsCardThreeDSecure';
import { PaymentMethodDetailsCardWallet1 } from './paymentMethodDetailsCardWallet1';

/**
* 
*/
export class PaymentMethodDetailsCard {
    /**
    * Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    */
    'brand': string | null;
    'checks': PaymentMethodDetailsCardChecks1 | null;
    /**
    * Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you\'ve collected.
    */
    'country': string | null;
    /**
    * A high-level description of the type of cards issued in this range. (For internal use only and not typically available in standard API requests.)
    */
    'description'?: string | null;
    /**
    * Two-digit number representing the card\'s expiration month.
    */
    'expMonth': number;
    /**
    * Four-digit number representing the card\'s expiration year.
    */
    'expYear': number;
    /**
    * Uniquely identifies this particular card number. You can use this attribute to check whether two customers whoâ€™ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.  *Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*
    */
    'fingerprint'?: string | null;
    /**
    * Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    */
    'funding': string | null;
    /**
    * Issuer identification number of the card. (For internal use only and not typically available in standard API requests.)
    */
    'iin'?: string | null;
    'installments': PaymentMethodDetailsCardInstallments1 | null;
    /**
    * The name of the card\'s issuing bank. (For internal use only and not typically available in standard API requests.)
    */
    'issuer'?: string | null;
    /**
    * The last four digits of the card.
    */
    'last4': string | null;
    /**
    * ID of the mandate used to make this payment or created by it.
    */
    'mandate': string | null;
    /**
    * True if this payment was marked as MOTO and out of scope for SCA.
    */
    'moto'?: boolean | null;
    /**
    * Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    */
    'network': string | null;
    'threeDSecure': PaymentMethodDetailsCardThreeDSecure | null;
    'wallet': PaymentMethodDetailsCardWallet1 | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "brand",
            "baseName": "brand",
            "type": "string"
        },
        {
            "name": "checks",
            "baseName": "checks",
            "type": "PaymentMethodDetailsCardChecks1"
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "expMonth",
            "baseName": "exp_month",
            "type": "number"
        },
        {
            "name": "expYear",
            "baseName": "exp_year",
            "type": "number"
        },
        {
            "name": "fingerprint",
            "baseName": "fingerprint",
            "type": "string"
        },
        {
            "name": "funding",
            "baseName": "funding",
            "type": "string"
        },
        {
            "name": "iin",
            "baseName": "iin",
            "type": "string"
        },
        {
            "name": "installments",
            "baseName": "installments",
            "type": "PaymentMethodDetailsCardInstallments1"
        },
        {
            "name": "issuer",
            "baseName": "issuer",
            "type": "string"
        },
        {
            "name": "last4",
            "baseName": "last4",
            "type": "string"
        },
        {
            "name": "mandate",
            "baseName": "mandate",
            "type": "string"
        },
        {
            "name": "moto",
            "baseName": "moto",
            "type": "boolean"
        },
        {
            "name": "network",
            "baseName": "network",
            "type": "string"
        },
        {
            "name": "threeDSecure",
            "baseName": "three_d_secure",
            "type": "PaymentMethodDetailsCardThreeDSecure"
        },
        {
            "name": "wallet",
            "baseName": "wallet",
            "type": "PaymentMethodDetailsCardWallet1"
        }    ];

    static getAttributeTypeMap() {
        return PaymentMethodDetailsCard.attributeTypeMap;
    }
}

