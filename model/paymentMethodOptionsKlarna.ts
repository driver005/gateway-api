/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* 
*/
export class PaymentMethodOptionsKlarna {
    /**
    * Controls when the funds will be captured from the customer\'s account.
    */
    'captureMethod'?: PaymentMethodOptionsKlarna.CaptureMethodEnum;
    /**
    * Preferred locale of the Klarna checkout page that the customer is redirected to.
    */
    'preferredLocale': string | null;
    /**
    * Indicates that you intend to make future payments with this PaymentIntent\'s payment method.  Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent\'s Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.  When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    */
    'setupFutureUsage'?: PaymentMethodOptionsKlarna.SetupFutureUsageEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "captureMethod",
            "baseName": "capture_method",
            "type": "PaymentMethodOptionsKlarna.CaptureMethodEnum"
        },
        {
            "name": "preferredLocale",
            "baseName": "preferred_locale",
            "type": "string"
        },
        {
            "name": "setupFutureUsage",
            "baseName": "setup_future_usage",
            "type": "PaymentMethodOptionsKlarna.SetupFutureUsageEnum"
        }    ];

    static getAttributeTypeMap() {
        return PaymentMethodOptionsKlarna.attributeTypeMap;
    }
}

export namespace PaymentMethodOptionsKlarna {
    export enum CaptureMethodEnum {
        Manual = <any> 'manual'
    }
    export enum SetupFutureUsageEnum {
        None = <any> 'none'
    }
}
