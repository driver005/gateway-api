/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* 
*/
export class GelatoReportDocumentOptions {
    /**
    * Array of strings of allowed identity document types. If the provided identity document isn’t one of the allowed types, the verification check will fail with a document_type_not_allowed error code.
    */
    'allowedTypes'?: Array<GelatoReportDocumentOptions.AllowedTypesEnum>;
    /**
    * Collect an ID number and perform an [ID number check](https://stripe.com/docs/identity/verification-checks?type=id-number) with the document’s extracted name and date of birth.
    */
    'requireIdNumber'?: boolean;
    /**
    * Disable image uploads, identity document images have to be captured using the device’s camera.
    */
    'requireLiveCapture'?: boolean;
    /**
    * Capture a face image and perform a [selfie check](https://stripe.com/docs/identity/verification-checks?type=selfie) comparing a photo ID and a picture of your user’s face. [Learn more](https://stripe.com/docs/identity/selfie).
    */
    'requireMatchingSelfie'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "allowedTypes",
            "baseName": "allowed_types",
            "type": "Array<GelatoReportDocumentOptions.AllowedTypesEnum>"
        },
        {
            "name": "requireIdNumber",
            "baseName": "require_id_number",
            "type": "boolean"
        },
        {
            "name": "requireLiveCapture",
            "baseName": "require_live_capture",
            "type": "boolean"
        },
        {
            "name": "requireMatchingSelfie",
            "baseName": "require_matching_selfie",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return GelatoReportDocumentOptions.attributeTypeMap;
    }
}

export namespace GelatoReportDocumentOptions {
    export enum AllowedTypesEnum {
        DrivingLicense = <any> 'driving_license',
        IdCard = <any> 'id_card',
        Passport = <any> 'passport'
    }
}
