/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { InvoiceInstallmentsCard } from './invoiceInstallmentsCard';
import { InvoicePaymentMethodOptionsCard } from './invoicePaymentMethodOptionsCard';

/**
* If paying by `card`, this sub-hash contains details about the Card payment method options to pass to the invoiceâ€™s PaymentIntent.
*/
export class InvoicesPaymentMethodOptionsCard {
    'installments'?: InvoiceInstallmentsCard;
    /**
    * We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    */
    'requestThreeDSecure': InvoicesPaymentMethodOptionsCard.RequestThreeDSecureEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "installments",
            "baseName": "installments",
            "type": "InvoiceInstallmentsCard"
        },
        {
            "name": "requestThreeDSecure",
            "baseName": "request_three_d_secure",
            "type": "InvoicesPaymentMethodOptionsCard.RequestThreeDSecureEnum"
        }    ];

    static getAttributeTypeMap() {
        return InvoicesPaymentMethodOptionsCard.attributeTypeMap;
    }
}

export namespace InvoicesPaymentMethodOptionsCard {
    export enum RequestThreeDSecureEnum {
        Any = <any> 'any',
        Automatic = <any> 'automatic'
    }
}
