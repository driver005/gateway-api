/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Coupon } from './coupon';
import { DeletedDiscountCustomer } from './deletedDiscountCustomer';
import { DeletedDiscountPromotionCode } from './deletedDiscountPromotionCode';

/**
* A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes). It contains information about when the discount began, when it will end, and what it is applied to.  Related guide: [Applying Discounts to Subscriptions](https://stripe.com/docs/billing/subscriptions/discounts).
*/
export class Discount {
    /**
    * The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.
    */
    'checkoutSession': string | null;
    'coupon': Coupon;
    'customer': DeletedDiscountCustomer | null;
    /**
    * If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.
    */
    'end': number | null;
    /**
    * The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.
    */
    'id': string;
    /**
    * The invoice that the discount\'s coupon was applied to, if it was applied directly to a particular invoice.
    */
    'invoice': string | null;
    /**
    * The invoice item `id` (or invoice line item `id` for invoice line items of type=\'subscription\') that the discount\'s coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.
    */
    'invoiceItem': string | null;
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': Discount.ObjectEnum;
    'promotionCode': DeletedDiscountPromotionCode | null;
    /**
    * Date that the coupon was applied.
    */
    'start': number;
    /**
    * The subscription that this coupon is applied to, if it is applied to a particular subscription.
    */
    'subscription': string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "checkoutSession",
            "baseName": "checkout_session",
            "type": "string"
        },
        {
            "name": "coupon",
            "baseName": "coupon",
            "type": "Coupon"
        },
        {
            "name": "customer",
            "baseName": "customer",
            "type": "DeletedDiscountCustomer"
        },
        {
            "name": "end",
            "baseName": "end",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "invoice",
            "baseName": "invoice",
            "type": "string"
        },
        {
            "name": "invoiceItem",
            "baseName": "invoice_item",
            "type": "string"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "Discount.ObjectEnum"
        },
        {
            "name": "promotionCode",
            "baseName": "promotion_code",
            "type": "DeletedDiscountPromotionCode"
        },
        {
            "name": "start",
            "baseName": "start",
            "type": "number"
        },
        {
            "name": "subscription",
            "baseName": "subscription",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Discount.attributeTypeMap;
    }
}

export namespace Discount {
    export enum ObjectEnum {
        Discount = <any> 'discount'
    }
}
