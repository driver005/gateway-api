/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PaymentPagesCheckoutSessionCustomerDetails } from './paymentPagesCheckoutSessionCustomerDetails';
import { PaymentPagesCheckoutSessionCustomerDetailsAddress } from './paymentPagesCheckoutSessionCustomerDetailsAddress';
import { PaymentPagesCheckoutSessionTaxId } from './paymentPagesCheckoutSessionTaxId';

/**
* The customer details including the customer\'s tax exempt status and the customer\'s tax IDs. Only the customer\'s email is present on Sessions in `setup` mode.
*/
export class CheckoutSessionCustomerDetails {
    'address': PaymentPagesCheckoutSessionCustomerDetailsAddress | null;
    /**
    * The email associated with the Customer, if one exists, on the Checkout Session after a completed Checkout Session or at time of session expiry. Otherwise, if the customer has consented to promotional content, this value is the most recent valid email provided by the customer on the Checkout form.
    */
    'email': string | null;
    /**
    * The customer\'s name after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.
    */
    'name': string | null;
    /**
    * The customer\'s phone number after a completed Checkout Session.
    */
    'phone': string | null;
    /**
    * The customer’s tax exempt status after a completed Checkout Session.
    */
    'taxExempt': CheckoutSessionCustomerDetails.TaxExemptEnum;
    /**
    * The customer’s tax IDs after a completed Checkout Session.
    */
    'taxIds': Array<PaymentPagesCheckoutSessionTaxId> | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "address",
            "baseName": "address",
            "type": "PaymentPagesCheckoutSessionCustomerDetailsAddress"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "phone",
            "baseName": "phone",
            "type": "string"
        },
        {
            "name": "taxExempt",
            "baseName": "tax_exempt",
            "type": "CheckoutSessionCustomerDetails.TaxExemptEnum"
        },
        {
            "name": "taxIds",
            "baseName": "tax_ids",
            "type": "Array<PaymentPagesCheckoutSessionTaxId>"
        }    ];

    static getAttributeTypeMap() {
        return CheckoutSessionCustomerDetails.attributeTypeMap;
    }
}

export namespace CheckoutSessionCustomerDetails {
    export enum TaxExemptEnum {
        Exempt = <any> 'exempt',
        None = <any> 'none',
        Reverse = <any> 'reverse'
    }
}
