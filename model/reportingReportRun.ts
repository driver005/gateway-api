/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { FinancialReportingFinanceReportRunRunParameters } from './financialReportingFinanceReportRunRunParameters';
import { ReportingReportRunResult } from './reportingReportRunResult';

/**
* The Report Run object represents an instance of a report type generated with specific run parameters. Once the object is created, Stripe begins processing the report. When the report has finished running, it will give you a reference to a file where you can retrieve your results. For an overview, see [API Access to Reports](https://stripe.com/docs/reporting/statements/api).  Note that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://stripe.com/docs/keys#test-live-modes).
*/
export class ReportingReportRun {
    /**
    * Time at which the object was created. Measured in seconds since the Unix epoch.
    */
    'created': number;
    /**
    * If something should go wrong during the run, a message about the failure (populated when  `status=failed`).
    */
    'error': string | null;
    /**
    * Unique identifier for the object.
    */
    'id': string;
    /**
    * `true` if the report is run on live mode data and `false` if it is run on test mode data.
    */
    'livemode': boolean;
    /**
    * String representing the object\'s type. Objects of the same type share the same value.
    */
    'object': ReportingReportRun.ObjectEnum;
    'parameters': FinancialReportingFinanceReportRunRunParameters;
    /**
    * The ID of the [report type](https://stripe.com/docs/reports/report-types) to run, such as `\"balance.summary.1\"`.
    */
    'reportType': string;
    'result': ReportingReportRunResult | null;
    /**
    * Status of this report run. This will be `pending` when the run is initially created.  When the run finishes, this will be set to `succeeded` and the `result` field will be populated.  Rarely, we may encounter an error, at which point this will be set to `failed` and the `error` field will be populated.
    */
    'status': string;
    /**
    * Timestamp at which this run successfully finished (populated when  `status=succeeded`). Measured in seconds since the Unix epoch.
    */
    'succeededAt': number | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "created",
            "baseName": "created",
            "type": "number"
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "ReportingReportRun.ObjectEnum"
        },
        {
            "name": "parameters",
            "baseName": "parameters",
            "type": "FinancialReportingFinanceReportRunRunParameters"
        },
        {
            "name": "reportType",
            "baseName": "report_type",
            "type": "string"
        },
        {
            "name": "result",
            "baseName": "result",
            "type": "ReportingReportRunResult"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string"
        },
        {
            "name": "succeededAt",
            "baseName": "succeeded_at",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ReportingReportRun.attributeTypeMap;
    }
}

export namespace ReportingReportRun {
    export enum ObjectEnum {
        ReportingReportRun = <any> 'reporting.report_run'
    }
}
