/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { SetupIntentPaymentMethodOptionsCardMandateOptions1 } from './setupIntentPaymentMethodOptionsCardMandateOptions1';

/**
* 
*/
export class SetupIntentPaymentMethodOptionsCard {
    'mandateOptions': SetupIntentPaymentMethodOptionsCardMandateOptions1 | null;
    /**
    * Selected network to process this SetupIntent on. Depends on the available networks of the card attached to the setup intent. Can be only set confirm-time.
    */
    'network': SetupIntentPaymentMethodOptionsCard.NetworkEnum;
    /**
    * We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Permitted values include: `automatic` or `any`. If not provided, defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    */
    'requestThreeDSecure': SetupIntentPaymentMethodOptionsCard.RequestThreeDSecureEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "mandateOptions",
            "baseName": "mandate_options",
            "type": "SetupIntentPaymentMethodOptionsCardMandateOptions1"
        },
        {
            "name": "network",
            "baseName": "network",
            "type": "SetupIntentPaymentMethodOptionsCard.NetworkEnum"
        },
        {
            "name": "requestThreeDSecure",
            "baseName": "request_three_d_secure",
            "type": "SetupIntentPaymentMethodOptionsCard.RequestThreeDSecureEnum"
        }    ];

    static getAttributeTypeMap() {
        return SetupIntentPaymentMethodOptionsCard.attributeTypeMap;
    }
}

export namespace SetupIntentPaymentMethodOptionsCard {
    export enum NetworkEnum {
        Amex = <any> 'amex',
        CartesBancaires = <any> 'cartes_bancaires',
        Diners = <any> 'diners',
        Discover = <any> 'discover',
        Interac = <any> 'interac',
        Jcb = <any> 'jcb',
        Mastercard = <any> 'mastercard',
        Unionpay = <any> 'unionpay',
        Unknown = <any> 'unknown',
        Visa = <any> 'visa'
    }
    export enum RequestThreeDSecureEnum {
        Any = <any> 'any',
        Automatic = <any> 'automatic',
        ChallengeOnly = <any> 'challenge_only'
    }
}
