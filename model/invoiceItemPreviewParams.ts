/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IndividualSpecsMetadata } from './individualSpecsMetadata';
import { InvoiceItemPreviewParamsDiscounts } from './invoiceItemPreviewParamsDiscounts';
import { InvoiceItemPreviewParamsTaxRates } from './invoiceItemPreviewParamsTaxRates';
import { OneTimePriceData } from './oneTimePriceData';
import { Period1 } from './period1';
import { PostInvoiceitemsRequestTaxCode } from './postInvoiceitemsRequestTaxCode';

export class InvoiceItemPreviewParams {
    /**
    * The integer amount in cents (or local equivalent) of previewed invoice item.
    */
    'amount'?: number;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). Only applicable to new invoice items.
    */
    'currency'?: string;
    /**
    * An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.
    */
    'description'?: string;
    /**
    * Explicitly controls whether discounts apply to this invoice item. Defaults to true, except for negative invoice items.
    */
    'discountable'?: boolean;
    'discounts'?: InvoiceItemPreviewParamsDiscounts;
    /**
    * The ID of the invoice item to update in preview. If not specified, a new invoice item will be added to the preview of the upcoming invoice.
    */
    'invoiceitem'?: string;
    'metadata'?: IndividualSpecsMetadata;
    'period'?: Period1;
    /**
    * The ID of the price object.
    */
    'price'?: string;
    'priceData'?: OneTimePriceData;
    /**
    * Non-negative integer. The quantity of units for the invoice item.
    */
    'quantity'?: number;
    /**
    * Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    */
    'taxBehavior'?: InvoiceItemPreviewParams.TaxBehaviorEnum;
    'taxCode'?: PostInvoiceitemsRequestTaxCode;
    'taxRates'?: InvoiceItemPreviewParamsTaxRates;
    /**
    * The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer\'s account, pass a negative unit_amount.
    */
    'unitAmount'?: number;
    /**
    * Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.
    */
    'unitAmountDecimal'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "discountable",
            "baseName": "discountable",
            "type": "boolean"
        },
        {
            "name": "discounts",
            "baseName": "discounts",
            "type": "InvoiceItemPreviewParamsDiscounts"
        },
        {
            "name": "invoiceitem",
            "baseName": "invoiceitem",
            "type": "string"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "IndividualSpecsMetadata"
        },
        {
            "name": "period",
            "baseName": "period",
            "type": "Period1"
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "string"
        },
        {
            "name": "priceData",
            "baseName": "price_data",
            "type": "OneTimePriceData"
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number"
        },
        {
            "name": "taxBehavior",
            "baseName": "tax_behavior",
            "type": "InvoiceItemPreviewParams.TaxBehaviorEnum"
        },
        {
            "name": "taxCode",
            "baseName": "tax_code",
            "type": "PostInvoiceitemsRequestTaxCode"
        },
        {
            "name": "taxRates",
            "baseName": "tax_rates",
            "type": "InvoiceItemPreviewParamsTaxRates"
        },
        {
            "name": "unitAmount",
            "baseName": "unit_amount",
            "type": "number"
        },
        {
            "name": "unitAmountDecimal",
            "baseName": "unit_amount_decimal",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return InvoiceItemPreviewParams.attributeTypeMap;
    }
}

export namespace InvoiceItemPreviewParams {
    export enum TaxBehaviorEnum {
        Exclusive = <any> 'exclusive',
        Inclusive = <any> 'inclusive',
        Unspecified = <any> 'unspecified'
    }
}
