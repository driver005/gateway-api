/**
 * Stripe API
 * The Stripe REST API. Please see https://stripe.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2022-11-15
 * Contact: dev-platform@stripe.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IssuingAuthorizationAmountDetails1 } from './issuingAuthorizationAmountDetails1';
import { IssuingAuthorizationPendingRequest } from './issuingAuthorizationPendingRequest';

/**
* The pending authorization request. This field will only be non-null during an `issuing_authorization.request` webhook.
*/
export class IssuingAuthorizationPendingRequest1 {
    /**
    * The additional amount Stripe will hold if the authorization is approved, in the card\'s [currency](https://stripe.com/docs/api#issuing_authorization_object-pending-request-currency) and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    */
    'amount': number;
    'amountDetails': IssuingAuthorizationAmountDetails1 | null;
    /**
    * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    */
    'currency': string;
    /**
    * If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.
    */
    'isAmountControllable': boolean;
    /**
    * The amount the merchant is requesting to be authorized in the `merchant_currency`. The amount is in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    */
    'merchantAmount': number;
    /**
    * The local currency the merchant is requesting to authorize.
    */
    'merchantCurrency': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "amountDetails",
            "baseName": "amount_details",
            "type": "IssuingAuthorizationAmountDetails1"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "isAmountControllable",
            "baseName": "is_amount_controllable",
            "type": "boolean"
        },
        {
            "name": "merchantAmount",
            "baseName": "merchant_amount",
            "type": "number"
        },
        {
            "name": "merchantCurrency",
            "baseName": "merchant_currency",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return IssuingAuthorizationPendingRequest1.attributeTypeMap;
    }
}

